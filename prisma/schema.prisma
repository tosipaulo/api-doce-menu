// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  password      String
  phoneNumber   String
  confirmToken  String?
  resetToken    String?
  resetExpires  DateTime?
  linkCheckout  String?
  acceptedTerms Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  menus         Menu[]
}

model Menu {
  id            String              @id @default(uuid())
  name          String
  slug          String              @unique
  user          User                @relation(fields: [userId], references: [id])
  userId        String
  products      Product[]
  analytics     Analytics[]
  settings      RestaurantSettings?
  customDomains CustomDomain[]
}

model Product {
  id          String      @id @default(uuid())
  name        String
  description String?
  price       Float
  imageUrl    String?
  menu        Menu        @relation(fields: [menuId], references: [id])
  menuId      String
  analytics   Analytics[]
}

model Analytics {
  id        String   @id @default(uuid())
  menu      Menu     @relation(fields: [menuId], references: [id])
  menuId    String
  product   Product? @relation(fields: [productId], references: [id])
  productId String? // opcional
  action    String // 'view' | 'click'
  createdAt DateTime @default(now())
}

model CustomDomain {
  id        String   @id @default(uuid())
  domain    String   @unique
  slug      String // slug do menu que será carregado nesse domínio
  verified  Boolean  @default(false)
  menu      Menu     @relation(fields: [menuId], references: [id])
  menuId    String
  createdAt DateTime @default(now())
}

model RestaurantSettings {
  id     String @id @default(uuid())
  menu   Menu   @relation(fields: [menuId], references: [id])
  menuId String @unique

  name        String
  description String?
  logoUrl     String?
  address     String?
  themeColor  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Mailing {
  id           String   @id @default(uuid())
  name         String
  email        String
  phoneNumber  String
  doceriaName  String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
